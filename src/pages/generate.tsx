import { sign } from "crypto";
import { type NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
import { useState } from "react";
import { Button } from "~/Component/Button";
import { FormGroup } from "~/Component/FormGroup";
import { Input } from "~/Component/Input";
import { api } from "~/utils/api";

const GeneratePage: NextPage = () => {
    const [form , setForm] = useState({
        prompt: "",
    });
    const [imageURL, setImageUrl] = useState('')

    const generateIcon = api.generate.generateIcon.useMutation({
        onSuccess(data) {
            if(!data.imageURL) return;
            setImageUrl(data.imageURL);
        },
    });

    function handleFormSubmit(e: React.FormEvent) {
        e.preventDefault();
        // TODO: Submit form data to backend
        generateIcon.mutate({
            prompt: form.prompt,
        });
        setForm({ prompt: ""});
    }

  function updateForm(key: string) {
    return function(e: React.ChangeEvent<HTMLInputElement>){
        setForm(prev => ({
            ...prev,
            [key]: e.target.value,
         }));
    };
  }

  const session = useSession();
  
  const isLoggedIn = !!session.data;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center">
        {!isLoggedIn && (
        <Button
         onClick={() => {
            signIn().catch(console.error);
        }}
        >
          Login
        </Button>
      )}

      {isLoggedIn && (
        <Button
         onClick={() => {
            signOut().catch(console.error);
        }}
        >
          Logout
        </Button>
      )}
      
        <form className="flex flex-col gap-4" onSubmit={handleFormSubmit}>
            <FormGroup>
             <label>Prompt</label>
             <Input value={form.prompt} onChange={updateForm("prompt")}></Input>
            </FormGroup>
            <button className="bg-blue-400 px-4 py-2 rounded hover:bg-blue-500">
              Submit
            </button>
        </form>
        
        <img 
          src={`data:image/png;base64,${imageURL}`} 
          alt="an image of your generated prompt"
          width="100"
          height="100"
        />
      </main>
    </>
  );
};

export default GeneratePage;
